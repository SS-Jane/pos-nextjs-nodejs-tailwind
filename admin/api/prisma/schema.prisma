// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  fname     String
  lname     String
  username  String     @unique
  password  String
  email     String     @unique
  phone     String
  level     String     @default("admin")
  status    String     @default("use")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  BillSales BillSale[]
}

model FoodType {
  id     Int     @id() @default(autoincrement())
  name   String
  remark String?
  status String  @default("use")
}

model FoodCategories {
  id        Int        @id() @default(autoincrement())
  name      String
  remark    String?
  status    String     @default("use")
  FoodSizes FoodSize[]
  Tastes    Taste[]
  Foods     Food[]
}

model FoodSize {
  id              Int              @id() @default(autoincrement())
  name            String
  remark          String?
  foodCategoryId  Int
  moneyAdded      Int
  status          String           @default("use")
  FoodCategories  FoodCategories   @relation(fields: [foodCategoryId], references: [id], onDelete: Cascade)
  SaleTempDetail  SaleTempDetail[]
  BillSaleDetails BillSaleDetail[]
}

model Taste {
  id              Int              @id() @default(autoincrement())
  name            String
  remark          String?
  foodCategoryId  Int
  status          String           @default("use")
  FoodCategories  FoodCategories   @relation(fields: [foodCategoryId], references: [id], onDelete: Cascade)
  SaleTempDetail  SaleTempDetail[]
  BillSaleDetails BillSaleDetail[]
}

model Food {
  id              Int              @id() @default(autoincrement())
  name            String
  img             String?
  remark          String?
  status          String           @default("use")
  price           Int
  foodCategory    String           @default("food") //food, drink
  FoodCategoryId  Int
  FoodCategories  FoodCategories   @relation(fields: [FoodCategoryId], references: [id], onDelete: Cascade)
  SaleTempDetails SaleTempDetail[]
  SaleTemps       SaleTemp[]
  BillSaleDetails BillSaleDetail[]
}

model SaleTemp {
  id              Int              @id @default(autoincrement())
  userId          Int
  tableNumber     Int
  foodId          Int
  qty             Int              @default(1)
  SaleTempDetails SaleTempDetail[]
  Food            Food             @relation(fields: [foodId], references: [id], onDelete: Cascade)
}

model SaleTempDetail {
  id         Int       @id() @default(autoincrement())
  saleTempId Int
  foodId     Int
  tasteId    Int?
  foodSizeId Int?
  Food       Food      @relation(fields: [foodId], references: [id], onDelete: Cascade)
  Taste      Taste?    @relation(fields: [tasteId], references: [id], onDelete: SetNull)
  FoodSize   FoodSize? @relation(fields: [foodSizeId], references: [id], onDelete: SetNull)
  SaleTemp   SaleTemp  @relation(fields: [saleTempId], references: [id], onDelete: Cascade)
}

model Organization {
  id        Int     @id() @default(autoincrement())
  name      String
  phone     String
  address   String
  email     String
  website   String
  promptpay String
  logo      String?
  taxCode   String
}

model BillSale {
  id              Int              @id() @default(autoincrement())
  createdDate     DateTime         @default(now())
  payDate         DateTime         @default(now())
  amount          Int
  payType         String
  userId          Int
  inputMoney      Int
  changeMoney     Int
  tableNumber     Int
  status          String           @default("use")
  User            User             @relation(fields: [userId], references: [id])
  BillSaleDetails BillSaleDetail[]
}

model BillSaleDetail {
  id         Int       @id() @default(autoincrement())
  billSaleId Int
  foodId     Int
  foodSizeId Int?
  tasteId    Int?
  moneyAdded Int?
  price      Int?
  BillSale   BillSale  @relation(fields: [billSaleId], references: [id])
  Food       Food      @relation(fields: [foodId], references: [id])
  FoodSize   FoodSize? @relation(fields: [foodSizeId], references: [id])
  Taste      Taste?    @relation(fields: [tasteId], references: [id])
}
